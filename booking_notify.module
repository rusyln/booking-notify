<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Core\Language\LanguageInterface;
use Eluceo\iCal\Component\Calendar;
use Eluceo\iCal\Component\Event;

/**
 * Implements hook_form_alter() to alter the node add booking form.
 */
function booking_notify_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    if ($form_id == 'node_booking_form') {
      // Add a submit handler to send emails.
      $form['actions']['submit']['#submit'][] = 'booking_notify_presave';
  
      // Get the logger service.
      $logger = \Drupal::service('logger.factory')->get('booking_notify');
  
      // Check if the email is sent.
      if (booking_notify_presave($form, $form_state)) {
        $logger->info('Email sent successfully.');
      } else {
        $logger->error('Failed to send email.');
      }
    }
  }

/**
 * Custom submit handler to handle presave logic and send emails.
 */
function booking_notify_presave(FormStateInterface $form_state) {
    // Get the node object from the form state.
    $node = $form_state->getFormObject()->getEntity();
  
    // Ensure the node is of type 'booking'.
    if ($node instanceof Node && $node->getType() === 'booking') {
      // Perform any presave operations here if needed.
      
      // Send notification emails.
      $mailManager = \Drupal::service('plugin.manager.mail');
      $module = 'booking_notify';
      $key = 'booking_notify';
      $user_email = $node->getOwner()->getEmail();
      $admin_email = \Drupal::config('system.site')->get('mail');
  
      // Fetch booking details.
      $booking_title = $node->getTitle();
      $start_date = $node->get('field_start_date')->value; // Replace 'field_start_date' with your field's machine name.
      $end_date = $node->get('field_end_date')->value; // Replace 'field_end_date' with your field's machine name.
      $room = $node->get('field_room')->value; // Replace 'field_room' with your field's machine name.
  
      $params['message'] = t('Your booking has been received for @title. It starts on @start_date and ends on @end_date in room @room.', [
        '@title' => $booking_title,
        '@start_date' => $start_date,
        '@end_date' => $end_date,
        '@room' => $room,
      ]);
  
      $langcode = \Drupal::currentUser()->getPreferredLangcode();
      $send = true;
  
      // Send email to the user.
      $mailManager->mail($module, $key, $user_email, $langcode, $params, NULL, $send);
  
      // Send email to the admin.
      $mailManager->mail($module, $key, $admin_email, $langcode, $params, NULL, $send);
    }
  }

/**
 * Implements hook_mail().
 */
function booking_notify_mail($key, &$message, $params) {
    switch ($key) {
      case 'booking_notify':
        $message['subject'] = t('Booking Notification');
        $message['body'] = []; // Clear the body array.
        $message['body'][] = $params['message']; // Add your message.
        break;
    }
  }
